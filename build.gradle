plugins {
	id "com.diffplug.spotless" version "5.14.0";
}

subprojects {
	apply plugin: 'java';
	apply plugin: 'com.diffplug.spotless';

	group 'org.oddlama.vane';
	version '1.3.2';
	sourceCompatibility = 17;

	repositories() {
		mavenCentral();
		maven { url 'https://papermc.io/repo/repository/maven-public/' };
		maven { url 'https://repo.dmulloy2.net/nexus/repository/public/' };
		maven { url 'https://repo.mikeprimm.com/' };
		maven { url 'https://repo.codemc.org/repository/maven-public/' };
		maven { url 'https://jitpack.io' };
		flatDir {
			dir rootProject.file('libs');
		}
	}

	compileJava {
		options.encoding = 'UTF-8';
		options.compilerArgs << '-Xlint:all';
		options.compilerArgs << '-Xlint:-processing';
		options.compilerArgs << '-Xdiags:verbose';
	}

	dependencies {
		compileOnly group: 'org.jetbrains', name: 'annotations', version: '20.0.0';
		annotationProcessor 'org.jetbrains:annotations:20.0.0';
	}

	spotless {
		java {
			importOrder()
			removeUnusedImports()
		}
	}
}

configure(subprojects.findAll {it.name != 'vane-waterfall'}) {
	dependencies {
		// We need the full implementation with CraftBukkit and NMS to compile.
		// Simply copy cache/patched_{..}.jar from a paper server into libs/.
		//implementation name: 'patchedp_1.18';
		implementation name: 'patched_1.18_remapped';
		compileOnly group: 'io.papermc.paper', name: 'paper-api', version: '1.18-R0.1-SNAPSHOT';
	}
}

configure(subprojects.findAll {it.name != 'vane-annotations' && it.name != 'vane-waterfall'}) {
	task copyJar(type: Copy) {
		from jar;
		into "${project.rootProject.projectDir}/target";
	}
	build.dependsOn copyJar;

	dependencies {
		implementation group: 'com.comphenix.protocol', name: 'ProtocolLib', version: '4.8.0-SNAPSHOT';

		compileOnly project(':vane-annotations');
		annotationProcessor project(':vane-annotations');
	}

	processResources {
		filesMatching("**/plugin.yml") {
			expand(project.properties)
		}
	}
}

configure(subprojects.findAll {it.name != 'vane-annotations' && it.name != 'vane-core' && it.name != 'vane-waterfall'}) {
	dependencies {
		implementation project(path: ':vane-core', configuration: 'shadow');
	}
}
